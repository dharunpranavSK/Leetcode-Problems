QUESTION:-
Given two non-negative integers, num1 and num2 represented as string, return the sum of num1 and num2 as a string.
You must solve the problem without using any built-in library for handling large integers (such as BigInteger). You must also not convert the inputs to integers directly.

Example 1:
Input: num1 = "11", num2 = "123"
Output: "134"

Example 2:
Input: num1 = "456", num2 = "77"
Output: "533"

Example 3:
Input: num1 = "0", num2 = "0"
Output: "0"

CODE:-
char* addStrings(char* num1, char* num2) {
    int i, j, front, sum, car;
    char *out;
    out = malloc (sizeof (char) * 100000);
    i = strlen (num1) - 1;
    j = strlen (num2) - 1;
    front = 100000 - 1;
    out[front--] = '\0';
    car = 0;
    while (i >= 0 && j >= 0) {
        sum = num1[i--] - '0' + num2[j--] - '0' + car;
        out[front--] = sum % 10 + '0';
        car = sum / 10;
    }
    for (; i >= 0; i--) {
        sum = num1[i] - '0' + car;
        out[front--] = sum % 10 + '0';
        car = sum / 10;
    } 
    for (; j >= 0; j--) {
        sum = num2[j] - '0' + car;
        out[front--] = sum % 10 + '0';
        car = sum / 10;
    }
    if (car > 0) {
        out[front--] = car + '0';
    }
    return &out[front + 1];
}
